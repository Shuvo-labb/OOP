/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmanagementsystem;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.IOException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class Amendhospitalpolicies extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Amendhospitalpolicies.class.getName());

    /**
     * Creates new form Amendhospitalpolicies
     */
    public Amendhospitalpolicies() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnReturn = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        VisitingHours = new javax.swing.JComboBox<>();
        txtPolicyItem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Weeks = new javax.swing.JComboBox<>();
        AmendHospitalPolicies = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        btnReturn.setBackground(new java.awt.Color(51, 51, 255));
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(51, 51, 255));
        btndelete.setForeground(new java.awt.Color(255, 255, 255));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(51, 51, 255));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 51, 255));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Visiting Hours:");

        jLabel2.setText("Weeks:");

        AmendHospitalPolicies.setText("Amend Hospital Policies");
        AmendHospitalPolicies.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                AmendHospitalPoliciesAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(btnAdd))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPolicyItem, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnEdit)
                                        .addGap(57, 57, 57)
                                        .addComponent(btndelete))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Weeks, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(AmendHospitalPolicies)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(57, 57, 57)
                                            .addComponent(VisitingHours, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(64, 64, 64)
                        .addComponent(btnReturn)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(AmendHospitalPolicies)
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(VisitingHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(Weeks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(txtPolicyItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn)
                    .addComponent(btndelete)
                    .addComponent(btnEdit)
                    .addComponent(btnAdd))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        VisitingHours.addItem(txtPolicyItem.getText());
        Weeks.addItem(txtPolicyItem.getText());
        
    String newPolicy = txtPolicyItem.getText().trim();
    if (newPolicy.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a policy to add.");
        JLabel errorLabel = new JLabel("Invalid Policy empty!!! Please add again.");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(null, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try (PrintWriter writer = new PrintWriter(new FileWriter("HospitalPolicies.txt", true))) {
        writer.println(newPolicy);
        JOptionPane.showMessageDialog(this, "Policy added.");
        txtPolicyItem.setText("");
        System.out.println("Data Written Successfully");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error writing to file: " + e.getMessage());
     }
    }//GEN-LAST:event_btnAddActionPerformed

    
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        
     String oldPolicy = txtPolicyItem.getText().trim();

    if (oldPolicy.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter the policy you want to edit.");
        JLabel errorLabel = new JLabel("Invalid Policy empty!!! Please edit again.");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(null, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String newPolicy = JOptionPane.showInputDialog(this, "Enter the new policy:", oldPolicy);
    if (newPolicy == null || newPolicy.trim().isEmpty()) {
        return; // User canceled or entered empty text
    }

    try {
        // Read all lines into memory
        File file = new File("HospitalPolicies.txt");
        BufferedReader reader = new BufferedReader(new FileReader(file));
        java.util.List<String> lines = new java.util.ArrayList<>();
        String line;
        boolean found = false;

        while ((line = reader.readLine()) != null) {
            if (line.trim().equals(oldPolicy)) {
                lines.add(newPolicy);  // Replace the old policy
                found = true;
            } else {
                lines.add(line);       // Keep other lines
            }
        }
        reader.close();

        if (!found) {
            JOptionPane.showMessageDialog(this, "Policy not found.");
            return;
        }

        // Rewrite the file with updated lines using PrintWriter
        PrintWriter writer = new PrintWriter(new FileWriter(file));
        for (String updatedLine : lines) {
            writer.println(updatedLine);
        }
        writer.close();

        JOptionPane.showMessageDialog(this, "Policy updated successfully.");
        txtPolicyItem.setText("");
        System.out.println("Edit Written Successfully");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error editing policy: " + e.getMessage());
      }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        String policyToDelete = txtPolicyItem.getText().trim();

    if (policyToDelete.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter the policy to delete.");
        JLabel errorLabel = new JLabel("Invalid Policy empty!!! Please delete again.");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(null, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        File file = new File("HospitalPolicies.txt");
        BufferedReader reader = new BufferedReader(new FileReader(file));
        java.util.List<String> lines = new java.util.ArrayList<>();
        String line;
        boolean found = false;

        while ((line = reader.readLine()) != null) {
            if (line.trim().equals(policyToDelete)) {
                found = true; // Skip adding this line — it's the one we want to delete
            } else {
                lines.add(line); // Keep other lines
            }
        }
        reader.close();

        if (!found) {
            JOptionPane.showMessageDialog(this, "Policy not found.");
            return;
        }

        // Rewrite the file without the deleted line
        PrintWriter writer = new PrintWriter(new FileWriter(file));
        for (String updatedLine : lines) {
            writer.println(updatedLine);
        }
        writer.close();

        JOptionPane.showMessageDialog(this, "Policy deleted successfully.");
        txtPolicyItem.setText("");
        System.out.println("Delete Written Successfully");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error deleting policy: " + e.getMessage());
     }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        AdminDashboard admin = new AdminDashboard(); // Create a new dashboard window
        admin.setVisible(true);                      // Show it
        this.dispose();                              // Close the current window
    }//GEN-LAST:event_btnReturnActionPerformed

    private void AmendHospitalPoliciesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_AmendHospitalPoliciesAncestorAdded
        AmendHospitalPolicies.setText("Amend Hospital Policies");
        AmendHospitalPolicies.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 20));
    }//GEN-LAST:event_AmendHospitalPoliciesAncestorAdded

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Amendhospitalpolicies().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AmendHospitalPolicies;
    private javax.swing.JComboBox<String> VisitingHours;
    private javax.swing.JComboBox<String> Weeks;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btndelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtPolicyItem;
    // End of variables declaration//GEN-END:variables
}
