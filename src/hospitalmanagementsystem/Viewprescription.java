/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmanagementsystem;

import java.util.Scanner;
import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;

public class Viewprescription extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Viewprescription.class.getName());

    /**
     * Creates new form Viewprescription
     */
    public Viewprescription() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtPerscriptionID = new javax.swing.JTextField();
        txtPatient = new javax.swing.JTextField();
        txtDoctor = new javax.swing.JTextField();
        txtMedicine = new javax.swing.JTextField();
        txtDosage = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        txtPerscriptionID.setText("RH123");
        txtPerscriptionID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerscriptionIDActionPerformed(evt);
            }
        });

        txtPatient.setText("John");
        txtPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientActionPerformed(evt);
            }
        });

        txtDoctor.setText("Dr.Kang");

        txtMedicine.setText("Paracetamol 500mg");

        txtDosage.setText("1 tablet, 3 times a day after meals");

        txtDuration.setText("5 days");
        txtDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDurationActionPerformed(evt);
            }
        });

        jLabel1.setText("Perscription ID:");

        jLabel2.setText("Patient:");

        jLabel3.setText("Doctor:");

        jLabel4.setText("Medicine:");

        jLabel5.setText("Dosage:");

        jLabel6.setText("Duration:");

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPerscriptionID, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addComponent(txtPatient)
                                    .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDosage)
                            .addComponent(txtDuration)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnAdd)
                        .addGap(50, 50, 50)
                        .addComponent(btnsave)
                        .addGap(75, 75, 75)
                        .addComponent(btndelete)
                        .addGap(49, 49, 49)
                        .addComponent(btnReturn)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPerscriptionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnsave)
                    .addComponent(btndelete)
                    .addComponent(btnReturn))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    String id = txtPerscriptionID.getText().trim();
    String patient = txtPatient.getText().trim();
    String doctor = txtDoctor.getText().trim();
    String medicine = txtMedicine.getText().trim();
    String dosage = txtDosage.getText().trim();
    String duration = txtDuration.getText().trim();

    // Validate input
    if (id.isEmpty() || patient.isEmpty() || doctor.isEmpty() ||
        medicine.isEmpty() || dosage.isEmpty() || duration.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.");
        return;
    }

    // Save to file
    try (PrintWriter writer = new PrintWriter(new FileWriter("ViewPrescription.txt", true))) {
        writer.println("Prescription ID: " + id);
        writer.println("Patient: " + patient);
        writer.println("Doctor: " + doctor);
        writer.println("Medicine: " + medicine);
        writer.println("Dosage: " + dosage);
        writer.println("Duration: " + duration);
        writer.println("----------------------------------");

        JOptionPane.showMessageDialog(this, "Prescription added successfully.");

        // Clear fields after saving
        txtPerscriptionID.setText("");
        txtPatient.setText("");
        txtDoctor.setText("");
        txtMedicine.setText("");
        txtDosage.setText("");
        txtDuration.setText("");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving prescription: " + e.getMessage());
    }
    }//GEN-LAST:event_btnAddActionPerformed
   
    private void txtPerscriptionIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerscriptionIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerscriptionIDActionPerformed

    private void txtDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDurationActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
    String id = txtPerscriptionID.getText().trim();
    String patient = txtPatient.getText().trim();
    String doctor = txtDoctor.getText().trim();
    String medicine = txtMedicine.getText().trim();
    String dosage = txtDosage.getText().trim();
    String duration = txtDuration.getText().trim();

    if (id.isEmpty() || patient.isEmpty() || doctor.isEmpty() || medicine.isEmpty() || dosage.isEmpty() || duration.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.");
        return;
    }

    try (PrintWriter writer = new PrintWriter(new FileWriter("ViewPrescription.txt", true))) {
        writer.println("Prescription ID: " + id);
        writer.println("Patient: " + patient);
        writer.println("Doctor: " + doctor);
        writer.println("Medicine: " + medicine);
        writer.println("Dosage: " + dosage);
        writer.println("Duration: " + duration);
        writer.println("----------------------------------");

        JOptionPane.showMessageDialog(this, "Prescription saved successfully.");
        
        // Optionally clear the fields
        txtPerscriptionID.setText("");
        txtPatient.setText("");
        txtDoctor.setText("");
        txtMedicine.setText("");
        txtDosage.setText("");
        txtDuration.setText("");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving prescription: " + e.getMessage());
    }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
         String id = txtPerscriptionID.getText().trim();

    if (id.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter the Prescription ID to delete.");
        return;
    }

    File file = new File("ViewPrescription.txt");
    if (!file.exists()) {
        JOptionPane.showMessageDialog(this, "File not found.");
        return;
    }

    try {
        BufferedReader reader = new BufferedReader(new FileReader(file));
        java.util.List<String> updatedLines = new java.util.ArrayList<>();
        String line;
        boolean isDeleting = false;
        boolean found = false;

        while ((line = reader.readLine()) != null) {
            if (line.startsWith("Prescription ID:")) {
                if (line.equals("Prescription ID: " + id)) {
                    isDeleting = true;
                    found = true;
                    continue;
                }
            }

            if (isDeleting) {
                if (line.trim().equals("----------------------------------")) {
                    isDeleting = false;
                    continue;
                }
                continue;
            }

            updatedLines.add(line);
        }

        reader.close();

        if (!found) {
            JOptionPane.showMessageDialog(this, "Prescription ID not found.");
            return;
        }

        PrintWriter writer = new PrintWriter(new FileWriter(file));
        for (String updatedLine : updatedLines) {
            writer.println(updatedLine);
        }
        writer.close();

        JOptionPane.showMessageDialog(this, "Prescription deleted successfully.");
        txtPerscriptionID.setText("");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error deleting prescription: " + e.getMessage());
     }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        AdminDashboard admin = new AdminDashboard(); // Create a new dashboard window
        admin.setVisible(true);                      // Show it
        this.dispose();                              // Close the current window
    }//GEN-LAST:event_btnReturnActionPerformed

     public void Viewaddfile(Viewscript P)
    {
      //The code to write the data to the text file..........
      File Fpat = new File("ViewPerscription.txt");
      try{
      FileWriter fw = new FileWriter(Fpat,true);
      BufferedWriter bw = new BufferedWriter(fw);
      PrintWriter pw = new PrintWriter(bw);
      String Line = P.getPerscriptionId()+" "+ P.getPatient()+" "+ P.getDoctor()+" "+ P.getMedicine()+" "+ P.getDosage()+" "+ P.getDuration();
      System.out.println(Line);
      pw.println(Line);
      System.out.println("Data Written Successfully");
      pw.close();
      }
      catch(IOException Ex)
      {
      
      }
    }
      
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Viewprescription().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtDoctor;
    private javax.swing.JTextField txtDosage;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtMedicine;
    private javax.swing.JTextField txtPatient;
    private javax.swing.JTextField txtPerscriptionID;
    // End of variables declaration//GEN-END:variables

    private void clearText() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
