/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmanagementsystem;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class Registerhealthcareprograms extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Registerhealthcareprograms.class.getName());

    /**
     * Creates new form Registerhealthcareprograms
     */
    public Registerhealthcareprograms() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnReturn = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        txtProgram = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Programsitem = new javax.swing.JComboBox<>();
        RegisterHealthProgram = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtorganiser = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        jPanel2.setBackground(new java.awt.Color(255, 255, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        btnReturn.setBackground(new java.awt.Color(51, 51, 255));
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 51, 255));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(0, 0, 255));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 51, 255));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Programs: ");

        RegisterHealthProgram.setText("Register Health Program");
        RegisterHealthProgram.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                RegisterHealthProgramAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel2.setText("Patient Name:");

        jLabel3.setText("Patient ID:");

        jLabel4.setText("Organiser:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdd)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnEdit)
                                .addGap(101, 101, 101)
                                .addComponent(btnDelete)
                                .addGap(75, 75, 75)
                                .addComponent(btnReturn))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPatientID)
                                        .addComponent(txtPatientName)
                                        .addComponent(Programsitem, 0, 257, Short.MAX_VALUE)
                                        .addComponent(txtorganiser))
                                    .addComponent(RegisterHealthProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(txtProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(RegisterHealthProgram)
                .addGap(82, 82, 82)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtorganiser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Programsitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(txtProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(btnAdd))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    String patientId = txtPatientID.getText().trim();
    String patientName = txtPatientName.getText().trim();
    String organiser = txtorganiser.getText().trim();
    String program = txtProgram.getText().trim();

    // Validation for empty fields
    if (patientId.isEmpty() || patientName.isEmpty() || organiser.isEmpty() || program.isEmpty()) {
        JLabel errorLabel = new JLabel("All fields are required!");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(this, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Add program to combo box (only if valid)
    Programsitem.addItem(program);

    // Save to file
    try (PrintWriter writer = new PrintWriter(new FileWriter("HealthCarePrograms.txt", true))) {
        writer.println("Patient ID: " + patientId);
        writer.println("Patient Name: " + patientName);
        writer.println("Organiser: " + organiser);
        writer.println("Program: " + program);
        writer.println("----------------------------------");

        JOptionPane.showMessageDialog(this, 
            "Record added successfully!\n\n" +
            "Patient ID: " + patientId + "\n" +
            "Patient Name: " + patientName + "\n" +
            "Organiser: " + organiser + "\n" +
            "Program: " + program
        );

        // Clear fields after adding
        txtPatientID.setText("");
        txtPatientName.setText("");
        txtorganiser.setText("");
        txtProgram.setText("");
        
        System.out.println("Data Written Successfully");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error adding record: " + e.getMessage());
     }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String searchID = txtPatientID.getText().trim();

    if (searchID.isEmpty()) {
        JLabel errorLabel = new JLabel("Please enter a Patient ID to edit.");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(this, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        File file = new File("HealthCarePrograms.txt");
        BufferedReader reader = new BufferedReader(new FileReader(file));
        java.util.List<String> lines = new java.util.ArrayList<>();
        String line;
        boolean found = false;

        while ((line = reader.readLine()) != null) {
            if (line.startsWith("Patient ID: " + searchID)) {
                // Read existing details
                String oldPatientID = line.substring(12);
                String oldPatientName = reader.readLine().substring(14); // "Patient Name: "
                String oldOrganiser = reader.readLine().substring(11); // "Organiser: "
                String oldProgram = reader.readLine().substring(9); // "Program: "
                reader.readLine(); // skip separator line

                // Ask for updated details
                String newPatientName = JOptionPane.showInputDialog(this, "Enter new patient name:", oldPatientName);
                if (newPatientName == null || newPatientName.trim().isEmpty()) newPatientName = oldPatientName;

                String newOrganiser = JOptionPane.showInputDialog(this, "Enter new organiser:", oldOrganiser);
                if (newOrganiser == null || newOrganiser.trim().isEmpty()) newOrganiser = oldOrganiser;

                String newProgram = (String) JOptionPane.showInputDialog(
                        this,
                        "Select new program:",
                        "Edit Program",
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        getComboBoxItems(Programsitem),
                        oldProgram
                );
                if (newProgram == null || newProgram.trim().isEmpty()) newProgram = oldProgram;

                // Save updated record
                lines.add("Patient ID: " + oldPatientID);
                lines.add("Patient Name: " + newPatientName);
                lines.add("Organiser: " + newOrganiser);
                lines.add("Program: " + newProgram);
                lines.add("---------------------------------");

                found = true;
            } else {
                lines.add(line);
            }
        }
        reader.close();

        if (!found) {
            JOptionPane.showMessageDialog(this, "Patient ID not found.");
            return;
        }

        // Write back to file
        PrintWriter writer = new PrintWriter(new FileWriter(file));
        for (String updatedLine : lines) {
            writer.println(updatedLine);
        }
        writer.close();

        JOptionPane.showMessageDialog(this, "Record updated successfully.");
        txtPatientID.setText("");
        System.out.println("Edit Written Successfully");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error editing program: " + e.getMessage());
     }
    }//GEN-LAST:event_btnEditActionPerformed

    // Helper to get JComboBox items as array
   private String[] getComboBoxItems(JComboBox<String> comboBox) {
    String[] items = new String[comboBox.getItemCount()];
    for (int i = 0; i < comboBox.getItemCount(); i++) {
        items[i] = comboBox.getItemAt(i);
    }
    return items;
    }
   
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String searchID = txtPatientID.getText().trim();

    if (searchID.isEmpty()) {
        JLabel errorLabel = new JLabel("Please enter a Patient ID to delete.");
        errorLabel.setForeground(Color.RED);
        errorLabel.setFont(new Font("Arial", Font.BOLD, 14));
        JOptionPane.showMessageDialog(this, errorLabel, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        File file = new File("HealthCarePrograms.txt");
        BufferedReader reader = new BufferedReader(new FileReader(file));
        java.util.List<String> lines = new java.util.ArrayList<>();
        String line;
        boolean found = false;
        String programToRemove = null;

        while ((line = reader.readLine()) != null) {
            if (line.startsWith("Patient ID: " + searchID)) {
                // Skip this record
                String patientName = reader.readLine(); // Patient Name
                String organiser = reader.readLine();   // Organiser
                programToRemove = reader.readLine();    // Program
                reader.readLine(); // Separator
                found = true;
            } else {
                lines.add(line);
            }
        }
        reader.close();

        if (!found) {
            JOptionPane.showMessageDialog(this, "Patient ID not found.");
            return;
        }

        // Write updated file without deleted record
        PrintWriter writer = new PrintWriter(new FileWriter(file));
        for (String updatedLine : lines) {
            writer.println(updatedLine);
        }
        writer.close();

        // Remove from JComboBox if program is in the list
        if (programToRemove != null) {
            Programsitem.removeItem(programToRemove);
        }

        JOptionPane.showMessageDialog(this, "Record deleted successfully.");
        txtPatientID.setText("");
        System.out.println("Delete Written Successfully");

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error deleting record: " + e.getMessage());
      }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        AdminDashboard admin = new AdminDashboard(); // Create a new dashboard window
        admin.setVisible(true);                      // Show it
        this.dispose();                              // Close the current window
    }//GEN-LAST:event_btnReturnActionPerformed

    private void RegisterHealthProgramAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_RegisterHealthProgramAncestorAdded
        RegisterHealthProgram.setText("Register Health Program");
        RegisterHealthProgram.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 20));
    }//GEN-LAST:event_RegisterHealthProgramAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Registerhealthcareprograms().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Programsitem;
    private javax.swing.JLabel RegisterHealthProgram;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtProgram;
    private javax.swing.JTextField txtorganiser;
    // End of variables declaration//GEN-END:variables
}
